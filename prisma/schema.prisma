// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id        String   @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
}

model Household {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name               String  @db.Char(255)
    onecartHouseholdId String? @db.Char(255)

    users       User[]
    recipeTypes RecipeType[]
    recipes     Recipe[]
    meals       Meal[]
    mealPlans   MealPlan[]
}

model RecipeType {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    createdBy String

    name  String
    icon  String
    color String

    household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
    recipes     Recipe[]
}

model Recipe {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    createdBy String

    name         String
    recipeTypes  RecipeType[]
    instructions String       @db.Text
    imageUrl     String?      @db.MediumText

    household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
    meals       Meal[]
}

model Meal {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    createdBy String

    recipes Recipe[]

    household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
    mealPlan    MealPlan?  @relation(fields: [mealPlanId], references: [id])
    mealPlanId  String?
}

model MealPlan {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    createdBy String

    name  String
    meals Meal[]

    household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
}
