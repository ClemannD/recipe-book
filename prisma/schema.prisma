// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id        String   @id
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    fullName String?

    Household   Household?   @relation(fields: [householdId], references: [id])
    householdId String?
    RecipeType  RecipeType[]
    Recipe      Recipe[]
}

model Household {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name               String  @db.Char(255)
    onecartHouseholdId String? @db.Char(255)

    users       User[]
    recipeTypes RecipeType[]
    recipes     Recipe[]
    mealPlans   MealPlan[]
}

model RecipeType {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    createdBy User     @relation(fields: [userId], references: [id])

    name  String
    icon  String
    color String?

    household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
    recipes     Recipe[]
    userId      String
}

model Recipe {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    createdBy User     @relation(fields: [userId], references: [id])

    name         String
    recipeTypes  RecipeType[]
    instructions String       @db.Text
    imageUrl     String?      @db.MediumText
    ingredients  Ingredient[]
    isPublic     Boolean      @default(false)

    household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
    meals       Meal[]
    userId      String
}

model Ingredient {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name     String
    unit     String
    quantity Float

    Recipe   Recipe? @relation(fields: [recipeId], references: [id])
    recipeId String?
}

model Meal {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    recipes Recipe[]

    mealPlan   MealPlan? @relation(fields: [mealPlanId], references: [id])
    mealPlanId String?
}

model MealPlan {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name  String
    meals Meal[]

    household   Household? @relation(fields: [householdId], references: [id])
    householdId String?
}
