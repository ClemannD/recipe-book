import { UserButton, useUser } from '@clerk/nextjs';
import Head from 'next/head';
import Link from 'next/link';
import { Button } from './ui/button';

const Layout = (props: { children: React.ReactNode; title?: string }) => {
  const user = useUser();

  return (
    <>
      <Head>
        <title>{props.title ?? 'Home'} | Recipe Book</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link
          rel="icon"
          href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22>
              <text y=%22.9em%22 font-size=%2290%22>
                ðŸ¥˜
              </text>
            </svg>"
        ></link>
      </Head>

      <div className="flex">
        <div className="flex h-screen w-[14rem] min-w-[14rem] flex-col bg-white shadow-lg">
          <Link href="/">
            <div className="flex flex-col items-center justify-center py-6">
              <p className="mb-4 text-5xl">ðŸ¥˜ ðŸ“–</p>
              <h1 className="text-3xl font-bold">Recipe Book</h1>
            </div>
          </Link>
          <div className="flex h-20 items-center justify-center">
            {user.isSignedIn ? (
              <>
                <UserButton /> <div className="ml-3">{user.user?.fullName}</div>
              </>
            ) : (
              <Link href="/signin" passHref>
                <Button className="max-w-96 w-full">Sign In/Up</Button>
              </Link>
            )}
          </div>

          <div className="flex flex-col items-center justify-center gap-y-3 p-6">
            <NavItem href="/shared-recipes">Shared Recipes</NavItem>
            {user.isSignedIn && (
              <>
                <NavItem href="/recipes">Your Recipes</NavItem>
                <NavItem href="/meal-plans">Meal Plans</NavItem>
                <NavItem href="/recipe-types">Recipe Types</NavItem>
              </>
            )}
          </div>
        </div>
        <div className="max-h-screen flex-grow overflow-y-auto overflow-x-hidden">
          {props.children}
        </div>
      </div>
    </>
  );
};

const NavItem = (props: { href: string; children: React.ReactNode }) => {
  return (
    <Link
      href={props.href}
      className="flex h-10 w-full items-center justify-center rounded text-lg font-medium text-slate-900 transition-colors ease-in-out hover:bg-slate-200"
    >
      {props.children}
    </Link>
  );
};

export default Layout;
